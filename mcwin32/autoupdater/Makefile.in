# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.18 2025/06/14 08:18:17 cvsuser Exp $
# libautoupdater and utils makefile
#
#
#

@SET_MAKE@
ROOT=		@abs_top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
CXX=		@CXX@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@
RC=		@RC@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

QUIETOUT:=	>/dev/null 2>&1
ifeq ($(VERBOSE),1)
QUIETOUT:=
else ifeq ($(VERBOSE),0)
else ifeq ($(VERBOSE),)
else
$(error VERBOSE: unexpected value 0 or 1 required, $(VERBOSE) given]))
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/obj@TOOLCHAINEXT@/$(BUILD_TYPE)/libautoupdater

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
CWARN=		@CWARN@ $(CWALL)
ifeq ("gcc","@CC@")
endif
ifeq (clangcl,$(findstring clangcl,"@TOOLCHAIN@"))
CXXWARN+=	-Wno-unused-command-line-argument
CXXWARN+=	-Wno-deprecated-declarations
CXXWARN+=	-Wno-inconsistent-missing-override
endif
ifeq (owc,$(findstring owc,"@TOOLCHAIN@"))
CFLAGS+=	-wcd=124
endif
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
CXXFLAGS=	@CXXFLAGS@
ifeq ("gcc","@CC@")
CXXFLAGS+=	-fpermissive
endif
CXXDEBUG=	@CXXDEBUG@
ifeq ("$(CXXDEBUG)","")
CXXDEBUG=	$(CDEBUG)
endif
CXXRELEASE=	@CXXRELEASE@
ifeq ("$(CXXRELEASE)","")
CXXRELEASE=	$(CRELEASE)
endif
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I$(D_INC) @CINCLUDE@
CEXTRA=		@DEFS@ @LIBCURL_CPPFLAGS@
ifdef PURIFY
CEXTRA+=	-DUSING_PURIFY
endif
ifeq ("win32","@build_os@")
CEXTRA+=	-DWIN32
endif
CDEPFLAGS=	$(CEXTRA) $(CINCLUDE)

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXRELEASE) $(CXXWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXDEBUG) $(CXXWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

YFLAGS=		-d
ARFLAGS=	rcv
RMFLAGS=	-f
RMDFLAGS=	-rf


#########################################################################################
# Targets

VERSION=	1.0.4
VERSIONSPEC=	$(subst .,:,$(VERSION))

UPDATERDLL=	$(D_LIB)/$(LP)autoupdater.la
UPDATERTSK=	$(D_BIN)/mcupdater$(E)
SIGNATURETSK=	$(D_BIN)/mcsignature$(E)

UPDATERSRC=	./libappupdater
ifeq ("owc19","@TOOLCHAIN@")
EXPATSRC=	./expat_legacy
else
EXPATSRC=	./libappupdater/expat
endif
SIGNSRC=	./libappupdater/sign
UPDATESRC=	./libappupdater/update
CJSONSRC=	./libappupdater/cjson
ED25519SRC=	./libappupdater/ed25519/src

VPATH=\
	$(UPDATERSRC) $(UPDATERSRC)/src $(UPDATERSRC)/util \
	$(UPDATERSRC)/localisation $(UPDATERSRC)/localisation/test \
	$(EXPATSRC) $(CJSONSRC) $(ED25519SRC) \
	$(SIGNSRC) $(UPDATESRC)

LIBCPPSOURCES=\
	$(filter-out CVS test.c, $(notdir $(wildcard $(UPDATERSRC)/*.cpp))) \
	$(filter-out CVS AutoVersionTest.cpp, $(notdir $(wildcard $(UPDATERSRC)/src/*.cpp))) \
	$(filter-out CVS, $(notdir $(wildcard $(UPDATERSRC)/localisation/*.cpp))) \
	$(filter-out CVS, $(notdir $(wildcard $(UPDATERSRC)/localisation/test/*.cpp)))

LIBCSOURCES=\
	$(filter-out CVS, $(notdir $(wildcard $(EXPATSRC)/*.c))) \
	$(filter-out CVS, $(notdir $(wildcard $(CJSONSRC)/*.c))) \
	$(filter-out CVS, $(notdir $(wildcard $(ED25519SRC)/*.c)))

DLLOBJS=\
	$(addprefix $(D_OBJ)/,$(subst .cpp,.lo,$(LIBCPPSOURCES))) \
	$(addprefix $(D_OBJ)/,$(subst .c,.lo,$(LIBCSOURCES)))

ifeq (mingw,$(findstring mingw,"@TOOLCHAIN@"))
DLLOBJS+=	$(D_OBJ)/AutoUpdater_res.o
else
DLLOBJS+=	$(D_OBJ)/AutoUpdater.res
endif

UPDATEROBJS=\
	$(D_OBJ)/mcupdater$(O)		\
	$(D_OBJ)/updatetoolshim$(O)	\
	$(D_OBJ)/upgetopt$(O)

ifeq (mingw,$(findstring mingw,"@TOOLCHAIN@"))
UPDATEROBJS+=	$(D_OBJ)/updater_res.o
else
UPDATEROBJS+=	$(D_OBJ)/updater.res
endif

SIGNATUREOBJS=\
	$(D_OBJ)/mcsignature$(O)	\
	$(D_OBJ)/signtoolshim$(O)	\
	$(D_OBJ)/signmanifest$(O)	\
	$(D_OBJ)/upgetopt$(O)

OBJS=		$(DLLOBJS) $(UPDATEROBJS) $(SIGNATUREOBJS)
LIBS=
DLLS=		$(UPDATERDLL)
TSKS=		$(UPDATERTSK) $(SIGNATURETSK)
INSTALLED=


#########################################################################################
# Rules

.PHONY:			build release debug
build:			$(LIBS) $(DLLS) $(TSKS)

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

INSTALLED+=	$(D_BIN)/libautoupdater.$(VERSION).dll
$(UPDATERDLL):		CEXTRA += -I$(UPDATERSRC) -I$(UPDATERSRC)/src -I$(EXPATSRC)
$(UPDATERDLL):		CEXTRA += -DXML_STATIC -DCOMPILED_FROM_DSP -D_CRT_SECURE_NO_DEPRECATE
$(UPDATERDLL):		CEXTRA += -DUNICODE -D_UNICODE
$(UPDATERDLL):		CEXTRA += -D_WIN32
ifdef USE_DEBUG
$(UPDATERDLL):		CEXTRA += -D_DEBUG
endif
$(UPDATERDLL):		CEXTRA += -DBUILDING_LIBAUTOUPDATER -DED25519_BUILD_DLL
$(UPDATERDLL):		$(D_OBJ)/.created $(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ $(DLLOBJS) -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(LDLIBS) version.lib wininet.lib advapi32.lib user32.lib

$(UPDATERTSK):		CEXTRA += -I$(UPDATERSRC)
$(UPDATERTSK):		MAPFILE=$(basename $@).map
$(UPDATERTSK):		$(UPDATEROBJS)
		$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -o $@ $(UPDATEROBJS) $(D_LIB)/libautoupdater$(A) $(LDLIBS) @LDMAPFILE@

$(SIGNATURETSK):	CEXTRA += -I$(UPDATERSRC) -I$(SIGNSRC)
$(SIGNATURETSK):	MAPFILE=$(basename $@).map
$(SIGNATURETSK):	$(SIGNATUREOBJS)
		$(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) -o $@ $(SIGNATUREOBJS) $(D_LIB)/libautoupdater$(A) $(LDLIBS) @LDMAPFILE@

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-@$(LIBTOOL) --mode=clean $(RM) $(DLLS) $(DLLOBJS) $(QUIETOUT)
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(INSTALLED) $(LIBS) $(CLEAN) $(XCLEAN) $(QUIETOUT)
		-@$(RM) $(LIBOBJS) $(QUIETOUT)

$(D_OBJ)/%$(O):		%.cpp
		$(CC) $(CXXFLAGS) -o $@ -c $<

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.cpp
		$(LIBTOOL) --mode=compile $(CC) $(CXXFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.res:		%.rc
		$(RC) -fo $@ -I./libappupdater/src $(RCDEFS) $<

$(D_OBJ)/%_res.o:	%.rc
		$(RC) -o $@ -I./libappupdater/src $(RCDEFS) $<

#end
