# -*- mode: mak; indent-tabs-mode: t; tab-width: 8 -*-
# $Id: Makefile.in,v 1.10 2023/02/03 17:10:09 cvsuser Exp $
# libz makefile
#
#
# Copyright (c) 2016 - 2023 Adam Young.
#
# This file is part of the Midnight Commander.
#
# The Midnight Commander is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# The Midnight Commander is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Notice: Portions of this text are reprinted and reproduced in electronic form. from
# IEEE Portable Operating System Interface (POSIX), for reference only. Copyright (C)
# 2001-2003 by the Institute of. Electrical and Electronics Engineers, Inc and The Open
# Group. Copyright remains with the authors and the original Standard can be obtained
# online at http://www.opengroup.org/unix/online.html.
# ==end==
#

@SET_MAKE@
ROOT=		@top_builddir@
top_builddir=	@top_builddir@

# File extensions

E=
O=		.o
H=		.h
A=		.a
LP=		lib

CLEAN=		*.bak *~ *.BAK *.swp *.tmp core *.core a.out
XCLEAN=

# Compilers, programs

CC=		@CC@
AR=		@AR@
RANLIB=		@RANLIB@
RM=		@RM@
PERL=		@PERL@
LIBTOOL=	@LIBTOOL@
RC=		@RC@

# Configuration

ifeq ("$(BUILD_TYPE)","")	#default
BUILD_TYPE=	debug
MAKEFLAGS+=	BUILD_TYPE=debug
endif
ifneq ("$(BUILD_TYPE)","release")
RTSUFFIX=d
endif

QUIETOUT:=	>/dev/null 2>&1
ifeq ($(VERBOSE),1)
QUIETOUT:=
else ifeq ($(VERBOSE),0)
else ifeq ($(VERBOSE),)
else
$(error VERBOSE: unexpected value 0 or 1 required, $(VERBOSE) given]))
endif

# Directories

D_INC=		$(ROOT)/include
D_BIN=		$(ROOT)/bin@TOOLCHAINEXT@/$(BUILD_TYPE)
D_LIB=		$(ROOT)/lib@TOOLCHAINEXT@/$(BUILD_TYPE)
D_OBJ=		$(ROOT)/obj@TOOLCHAINEXT@/$(BUILD_TYPE)/libz

# Common flags

XFLAGS=
CFLAGS=		@CFLAGS@
ifeq ("gcc","@CC@")
CWARN=		$(filter-out -Wshadow -Wmissing-prototypes -Wsign-compare -Wimplicit-fallthrough, @CWARN@) -Wno-sign-compare -Wno-implicit-fallthrough
else
CWARN=		@CWARN@
endif
CDEBUG=		@CDEBUG@
CRELEASE=	@CRELEASE@
CXXFLAGS=	@CXXFLAGS@
CXXDEBUG=	@CXXDEBUG@
ifeq ("$(CXXDEBUG)","")
CXXDEBUG=	$(CDEBUG)
endif
CXXRELEASE=	@CXXRELEASE@
ifeq ("$(CXXRELEASE)","")
CXXRELEASE=	$(CRELEASE)
endif
LDDEBUG=	@LDDEBUG@
LDRELEASE=	@LDRELEASE@

CINCLUDE=	-I. @CINCLUDE@
CEXTRA= 	@DEFS@

ifeq ("$(BUILD_TYPE)","release")
CFLAGS+=	$(CRELEASE) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXRELEASE) $(CWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDRELEASE) @LDFLAGS@
else
CFLAGS+=	$(CDEBUG) $(CWARN) $(CINCLUDE) $(CEXTRA) $(XFLAGS)
CXXFLAGS+=	$(CXXDEBUG) $(CWARN) $(CINCLUDE) @CXXINCLUDE@ $(CEXTRA) $(XFLAGS)
LDFLAGS=	$(LDDEBUG) @LDFLAGS@
endif
LDLIBS=		-L$(D_LIB) @LIBS@ @EXTRALIBS@

ARFLAGS=	rcv
YFLAGS=		-d
RMFLAGS=	-f


#########################################################################################
# Targets

ZLIB=		$(D_LIB)/$(LP)z_static$(A)
ZDLL=		$(D_LIB)/$(LP)z.la

#VERSION=	1.2.7
#VERSION=	1.2.8
VERSION=	1.2.11
VERSIONSPEC=	$(subst .,:,$(VERSION))
VERPACKED=	zlib-$(VERSION).tgz

ZSRC=		./zlib-$(VERSION)
VPATH=		$(ZSRC) $(ZSRC)/win32
CSOURCES=\
	adler32.c \
	compress.c \
	crc32.c \
	deflate.c \
	gzclose.c  \
	gzlib.c \
	gzread.c \
	gzwrite.c \
	infback.c \
	inflate.c \
	inftrees.c \
	inffast.c \
	trees.c \
	uncompr.c \
	zutil.c

LIBOBJS=\
	$(addprefix $(D_OBJ)/,$(subst .c,$(O),$(CSOURCES)))

DLLOBJS=\
	$(subst $(O),.lo,$(LIBOBJS))

ifeq ("win32","@build_os@")
ifeq (mingw,$(findstring mingw,"@TOOLCHAIN@"))
DLLOBJS+=	$(D_OBJ)/zlib_res.o
else
DLLOBJS+=	$(D_OBJ)/zlib.res
endif
endif

OBJS=		$(LIBOBJS) $(DLLOBJS)
LIBS=		$(ZLIB) $(ZDLL)
TSKS=
INSTALLED=

#########################################################################################
# Rules

.PHONY: 	build release debug
build:			source unpacked
unpacked:		object $(LIBS) $(TSKS) installinc

release:
		$(MAKE) BUILD_TYPE=release $(filter-out release, $(MAKECMDGOALS))
debug:
		$(MAKE) BUILD_TYPE=debug $(filter-out debug, $(MAKECMDGOALS))

CEXTRA	+=	-I$(ZSRC) -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE

$(ZLIB):		CEXTRA += -DZLIB_STATIC
$(ZLIB):		$(LIBOBJS)
		$(RM) $(RMFLAGS) $@ $(QUIETOUT)
		$(AR) $(ARFLAGS) $@ $^
		$(RANLIB) $@

INSTALLED+=	$(D_BIN)/libz.$(VERSION).dll
$(ZDLL):		CEXTRA += -DZLIB_DLL
ifeq ("yes","@ISWIN32@")
$(ZDLL):		ZDEF = -export-symbols $(ZSRC)/win32/zlib.def --export-fastcall
endif
$(ZDLL):		MAPFILE=$(basename $@).map
$(ZDLL):		$(DLLOBJS)
		$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -o $@ -version-number $(VERSIONSPEC) \
			-rpath $(D_LIB) -bindir $(D_BIN) $(ZDEF) $^ $(LDLIBS) @LDMAPFILE@

source:			.unpacked.$(VERSION)
		$(MAKE) unpacked

.unpacked.$(VERSION):	$(VERPACKED)
		@echo "do not delete, managed file" > $@
		@echo "unpacking source $VERPACKED"
		@gzip -c -d $(VERPACKED) | tar -xvf -

.PHONY:		object
object:			$(D_OBJ)/.created

.PHONY:		installinc
installinc:		../include/.created
		@echo publishing headers ...
		-cp $(ZSRC)/zlib.h ../include
		-cp $(ZSRC)/zconf.h ../include

%/.created:
		-@mkdir $(@D)
		@echo "do not delete, managed directory" > $@

clean:
		@echo $(BUILD_TYPE) clean
		-@$(LIBTOOL) --mode=clean $(RM) $(ZDLL) $(DLLOBJS) $(QUIETOUT)
		-@$(RM) $(RMFLAGS) $(BAK) $(TSKS) $(INSTALLED) $(LIBS) $(CLEAN) $(XCLEAN) $(QUIETOUT)
		-@$(RM) $(LIBOBJS) $(QUIETOUT)

$(D_OBJ)/%$(O):		%.c
		$(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.lo:		%.c
		$(LIBTOOL) --mode=compile $(CC) $(CFLAGS) -o $@ -c $<

$(D_OBJ)/%.res:		%1.rc
		$(RC) -fo $@ $<

$(D_OBJ)/%_res.o:	%1.rc
		$(RC) -o $@ $<

#end

